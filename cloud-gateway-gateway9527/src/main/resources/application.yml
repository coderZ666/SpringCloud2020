server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route # 路由的id,没有规定规则但要求唯一,建议配合服务名
          #匹配后提供服务的路由地址
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service #服务集群时用负载均衡的方式访问服务，这里写集群的服务名
          predicates:
            - Path=/payment/get/** # 断言，路径相匹配的进行路由
        - id: payment_route2
          #匹配后提供服务的路由地址
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service #服务集群时用负载均衡的方式访问服务，这里写集群的服务名
          predicates:
            - Path=/payment/lb #断言,路径相匹配的进行路由
            - After=2020-12-14T16:44:14.331+08:00[Asia/Shanghai]
            #- Before=2020-12-14T16:33:14.331+08:00[Asia/Shanghai]
            #- Between=2020-12-14T16:33:14.331+08:00[Asia/Shanghai],2020-12-14T16:33:14.331+08:00[Asia/Shanghai]
            #- Cookie=username,zwx # 表示Cookie中必须有[username，zwx]键值对才可以路由转发，其中zwx可以是正则表达式匹配多种情况
            #- Header=X-Request-Id, \d+ # 如果请求具有名为X-Request-Id的请求头其值与\d+正则表达式匹配（正整数）才匹配路由转发
            #- Host=**.zwx.com # 如果请求具有这种路由匹配Host用的头值**.zwx.com才会路由转发
            #- Method=GET # 请求方式为Get才可以转发
            #- Query=green # 请求包含参数green才路由转发 ?green=xxx
            #- RemoteAddr=192.168.1.1/24
            #- Weight=group1, 2 # 表示权重，假如同一个请求配置两个uri，group相同的为一组配置，数字表示x/10的请求在这个uri处理

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    # 表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true。
    # 单节点无所谓，集群必须为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #单机版
      #defaultZone: http://localhost:7001/eureka
      #集群版
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
